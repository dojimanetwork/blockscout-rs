swagger: "2.0"
info:
  title: bens.proto
  version: version not set
tags:
  - name: DomainsExtractor
  - name: Health
consumes:
  - application/json
produces:
  - application/json
paths:
  /api/v1/{chainId}/addresses:batch-resolve-names:
    post:
      summary: Perform batch resolving of list of address for blockscout backend requests
      operationId: DomainsExtractor_BatchResolveAddressNames
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1BatchResolveAddressNamesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: chainId
          description: The chain (network) where domain search should be done
          in: path
          required: true
          type: string
          format: int64
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              addresses:
                type: array
                items:
                  type: string
                title: List of requested addresses
      tags:
        - DomainsExtractor
  /api/v1/{chainId}/addresses:lookup:
    post:
      summary: Get basic info about address for ens-lookup and blockscout quick-search. Sorted by `registration_date`
      operationId: DomainsExtractor_LookupAddress
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1LookupAddressResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: chainId
          description: The chain (network) where domain search should be done
          in: path
          required: true
          type: string
          format: int64
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              address:
                type: string
                title: Address of EOA or contract
              resolvedTo:
                type: boolean
                title: Include domains resolved to the address
              ownedBy:
                type: boolean
                title: Include domains owned by the address
              onlyActive:
                type: boolean
                title: Filtering field to remove expired domains
              sort:
                type: string
                title: Sorting field. Default is `registration_date`
              order:
                $ref: '#/definitions/v1Order'
                title: Order direction. Defaut is ASC
      tags:
        - DomainsExtractor
  /api/v1/{chainId}/domains/{name}:
    get:
      summary: Get detailed information about domain for Detailed domain page
      operationId: DomainsExtractor_GetDomain
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1DetailedDomain'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: chainId
          description: The chain (network) where domain search should be done
          in: path
          required: true
          type: string
          format: int64
        - name: name
          description: Name of domain, for example vitalik.eth
          in: path
          required: true
          type: string
      tags:
        - DomainsExtractor
  /api/v1/{chainId}/domains/{name}/events:
    get:
      summary: Get list of events of domain for Detailed domain page
      operationId: DomainsExtractor_ListDomainEvents
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListDomainEventsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: chainId
          description: The chain (network) where domain search should be done
          in: path
          required: true
          type: string
          format: int64
        - name: name
          description: Name of domain, for example vitalik.eth
          in: path
          required: true
          type: string
        - name: sort
          description: Sorting field. Default is `timestamp`
          in: query
          required: false
          type: string
        - name: order
          description: Order direction. Default is ASC
          in: query
          required: false
          type: string
          enum:
            - ASC
            - DESC
          default: ASC
      tags:
        - DomainsExtractor
  /api/v1/{chainId}/domains:lookup:
    post:
      summary: Get basic info about domain for ens-lookup and blockscout quick-search. Sorted by `registration_date`
      operationId: DomainsExtractor_LookupDomainName
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1LookupDomainNameResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: chainId
          description: The chain (network) where domain search should be done
          in: path
          required: true
          type: string
          format: int64
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                title: Name of domain, for example vitalik.eth
              onlyActive:
                type: boolean
                title: Filtering field to remove expired domains
              sort:
                type: string
                title: Sorting field. Default is `registration_date`
              order:
                $ref: '#/definitions/v1Order'
                title: Order direction. Default is ASC
      tags:
        - DomainsExtractor
  /health:
    get:
      summary: |-
        If the requested service is unknown, the call will fail with status
        NOT_FOUND.
      operationId: Health_Check
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1HealthCheckResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: service
          in: query
          required: false
          type: string
      tags:
        - Health
definitions:
  HealthCheckResponseServingStatus:
    type: string
    enum:
      - UNKNOWN
      - SERVING
      - NOT_SERVING
      - SERVICE_UNKNOWN
    default: UNKNOWN
    description: ' - SERVICE_UNKNOWN: Used only by the Watch method.'
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  v1Address:
    type: object
    properties:
      hash:
        type: string
  v1BatchResolveAddressNamesResponse:
    type: object
    properties:
      names:
        type: object
        additionalProperties:
          type: string
  v1DetailedDomain:
    type: object
    properties:
      id:
        type: string
        title: Unique id for the domain, also known as nodehash
      name:
        type: string
        title: The human readable name, if known. Unknown portions replaced with hash in square brackets (eg, foo.[1234].eth)
      tokenId:
        type: string
        title: Hex representation of labelhash
      owner:
        $ref: '#/definitions/v1Address'
        title: The account that owns the domain
      resolvedAddress:
        $ref: '#/definitions/v1Address'
        title: Optinal. Resolved address of this domain
      registrant:
        $ref: '#/definitions/v1Address'
        title: Optinal. The account that owns the ERC721 NFT for the domain
      registrationDate:
        type: string
        description: Optinal. RFC 3339 datetime  of expiry date.
      expiryDate:
        type: string
        title: Optinal. RFC 3339 datetime  of expiry date. None means never expires
      otherAddresses:
        type: object
        additionalProperties:
          type: string
        title: |-
          Map chain -> resolved_address that contains other blockchain addresses.
          This map will contain `current_chain_id` -> `resovled_address` if `resovled_address` is not None
  v1Domain:
    type: object
    properties:
      id:
        type: string
        title: Unique id for the domain, also known as nodehash
      name:
        type: string
        title: The human readable name, if known. Unknown portions replaced with hash in square brackets (eg, foo.[1234].eth)
      resolvedAddress:
        $ref: '#/definitions/v1Address'
        title: Optinal. Resolved address of this domain
      owner:
        $ref: '#/definitions/v1Address'
        title: The account that owns the domain
      registrationDate:
        type: string
        description: Optinal. RFC 3339 datetime of expiry date.
      expiryDate:
        type: string
        title: Optinal. RFC 3339 datetime  of expiry date. None means never expires
  v1DomainEvent:
    type: object
    properties:
      transactionHash:
        type: string
        title: Transaction hash where action occured
      timestamp:
        type: string
        title: Timestamp of this transaction
      fromAddress:
        $ref: '#/definitions/v1Address'
        title: /Sender of transaction
      action:
        type: string
        title: Optinal. Action name
  v1HealthCheckResponse:
    type: object
    properties:
      status:
        $ref: '#/definitions/HealthCheckResponseServingStatus'
  v1ListDomainEventsResponse:
    type: object
    properties:
      items:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1DomainEvent'
      pagination:
        $ref: '#/definitions/v1Pagination'
  v1LookupAddressResponse:
    type: object
    properties:
      items:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Domain'
        title: |-
          List of domains that resolved to or owned by requested address
          Sorted by relevance, so first address could be displayed as main resolved address
      pagination:
        $ref: '#/definitions/v1Pagination'
  v1LookupDomainNameResponse:
    type: object
    properties:
      items:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Domain'
        title: |-
          List of domains that resolved to or owned by requested address
          Sorted by relevance, so first address could be displayed as main resolved address
      pagination:
        $ref: '#/definitions/v1Pagination'
  v1Order:
    type: string
    enum:
      - ASC
      - DESC
    default: ASC
  v1Pagination:
    type: object
    properties:
      totalRecords:
        type: integer
        format: int64
